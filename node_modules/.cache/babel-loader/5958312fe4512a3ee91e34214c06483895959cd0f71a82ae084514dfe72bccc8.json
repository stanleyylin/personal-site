{"ast":null,"code":"var _jsxFileName = \"/Users/dootss/appdevelopment/stanleylin.ca/src/main-page/Connect.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { string, z } from \"zod\";\nimport './connect.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = z.object({\n  name: string().min(1, {\n    message: 'Name is required!'\n  }),\n  email: string().email(),\n  message: string().min(1, {\n    message: 'Message is required!'\n  })\n});\nconst Connect = _ref => {\n  _s();\n  var _errors$name, _errors$email, _errors$message;\n  let {\n    onSave,\n    user = {}\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    formState\n  } = useForm({\n    resolver: zodResolver(schema)\n  });\n  const {\n    errors\n  } = formState;\n  const handleSave = formValues => {\n    onSave(formValues);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"last-part\",\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"connect-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"connect-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"connect-title\",\n          children: \" Let's Connect! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"connect-subtitle\",\n          children: \"I WOULD LOVE TO CONNECT WITH YOU ABOUT A NEW OPPORTUNITY, A COLLABORATION, OR A QUICK CHAT ABOUT ANYTHING :)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"connect-form\",\n        onSubmit: handleSubmit(handleSave),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"name-input\",\n            placeholder: \"Name\",\n            ...register('name')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"email-input\",\n            placeholder: \"Email\",\n            ...register('email')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"message-input\",\n            placeholder: \"Message\",\n            cols: \"40\",\n            rows: \"14\",\n            ...register('message')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (_errors$message = errors.message) === null || _errors$message === void 0 ? void 0 : _errors$message.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"connect-button\",\n          type: \"submit\",\n          children: \"Connect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Connect, \"FW3sJsj8gRxWrmRSQec/vgQ11EM=\", false, function () {\n  return [useForm];\n});\n_c = Connect;\nexport default Connect;\nvar _c;\n$RefreshReg$(_c, \"Connect\");","map":{"version":3,"names":["React","useForm","zodResolver","string","z","jsxDEV","_jsxDEV","schema","object","name","min","message","email","Connect","_ref","_s","_errors$name","_errors$email","_errors$message","onSave","user","register","handleSubmit","formState","resolver","errors","handleSave","formValues","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","cols","rows","type","_c","$RefreshReg$"],"sources":["/Users/dootss/appdevelopment/stanleylin.ca/src/main-page/Connect.jsx"],"sourcesContent":["import React from 'react'\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { string, z }  from \"zod\";\nimport './connect.css';\n\nconst schema = z.object({\n  name: string().min(1, { message: 'Name is required!' }),\n  email: string().email(),\n  message: string().min(1, { message: 'Message is required!' }),\n});\n\nconst Connect = ( { onSave, user = {} }) => {\n  const { register, handleSubmit, formState } = useForm({ resolver: zodResolver(schema) });\n\n  const { errors } = formState;\n\n  const handleSave = (formValues) => {\n    onSave(formValues);\n  }\n\n  return (\n    <div className='last-part'>\n      <main className='connect-section'>\n        <div className='connect-text'>\n          <p className='connect-title'> Let's Connect! </p>\n          <p className='connect-subtitle'>I WOULD LOVE TO CONNECT WITH YOU ABOUT A NEW OPPORTUNITY, A COLLABORATION, OR A QUICK CHAT ABOUT ANYTHING :&#41;</p>\n          </div>\n\n        <form className=\"connect-form\" onSubmit={handleSubmit(handleSave)}>\n          <div>\n            <input\n              className='name-input'\n              placeholder='Name'\n              {...register('name')}\n            />\n            <div>{errors.name?.message}</div>\n          </div>\n\n          <div>\n            <input\n              className='email-input'\n              placeholder='Email'\n              {...register('email')}\n            />\n            <div>{errors.email?.message}</div>\n          </div>\n          \n          <div>\n            <textarea\n              className='message-input'\n              placeholder='Message'\n              cols=\"40\"\n              rows=\"14\"\n              {...register('message')}\n            />\n            <div>{errors.message?.message}</div>\n          </div>\n          <button className='connect-button' type=\"submit\">Connect</button>\n        </form>    \n      </main>\n\n      <footer>\n\n      </footer>\n    </div>\n  )\n}\n\nexport default Connect\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,MAAM,EAAEC,CAAC,QAAS,KAAK;AAChC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,MAAM,GAAGH,CAAC,CAACI,MAAM,CAAC;EACtBC,IAAI,EAAEN,MAAM,CAAC,CAAC,CAACO,GAAG,CAAC,CAAC,EAAE;IAAEC,OAAO,EAAE;EAAoB,CAAC,CAAC;EACvDC,KAAK,EAAET,MAAM,CAAC,CAAC,CAACS,KAAK,CAAC,CAAC;EACvBD,OAAO,EAAER,MAAM,CAAC,CAAC,CAACO,GAAG,CAAC,CAAC,EAAE;IAAEC,OAAO,EAAE;EAAuB,CAAC;AAC9D,CAAC,CAAC;AAEF,MAAME,OAAO,GAAGC,IAAA,IAA4B;EAAAC,EAAA;EAAA,IAAAC,YAAA,EAAAC,aAAA,EAAAC,eAAA;EAAA,IAA1B;IAAEC,MAAM;IAAEC,IAAI,GAAG,CAAC;EAAE,CAAC,GAAAN,IAAA;EACrC,MAAM;IAAEO,QAAQ;IAAEC,YAAY;IAAEC;EAAU,CAAC,GAAGtB,OAAO,CAAC;IAAEuB,QAAQ,EAAEtB,WAAW,CAACK,MAAM;EAAE,CAAC,CAAC;EAExF,MAAM;IAAEkB;EAAO,CAAC,GAAGF,SAAS;EAE5B,MAAMG,UAAU,GAAIC,UAAU,IAAK;IACjCR,MAAM,CAACQ,UAAU,CAAC;EACpB,CAAC;EAED,oBACErB,OAAA;IAAKsB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBvB,OAAA;MAAMsB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC/BvB,OAAA;QAAKsB,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BvB,OAAA;UAAGsB,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACjD3B,OAAA;UAAGsB,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAC;QAAgH;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/I,CAAC,eAER3B,OAAA;QAAMsB,SAAS,EAAC,cAAc;QAACM,QAAQ,EAAEZ,YAAY,CAACI,UAAU,CAAE;QAAAG,QAAA,gBAChEvB,OAAA;UAAAuB,QAAA,gBACEvB,OAAA;YACEsB,SAAS,EAAC,YAAY;YACtBO,WAAW,EAAC,MAAM;YAAA,GACdd,QAAQ,CAAC,MAAM;UAAC;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB,CAAC,eACF3B,OAAA;YAAAuB,QAAA,GAAAb,YAAA,GAAMS,MAAM,CAAChB,IAAI,cAAAO,YAAA,uBAAXA,YAAA,CAAaL;UAAO;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,eAEN3B,OAAA;UAAAuB,QAAA,gBACEvB,OAAA;YACEsB,SAAS,EAAC,aAAa;YACvBO,WAAW,EAAC,OAAO;YAAA,GACfd,QAAQ,CAAC,OAAO;UAAC;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,eACF3B,OAAA;YAAAuB,QAAA,GAAAZ,aAAA,GAAMQ,MAAM,CAACb,KAAK,cAAAK,aAAA,uBAAZA,aAAA,CAAcN;UAAO;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC,eAEN3B,OAAA;UAAAuB,QAAA,gBACEvB,OAAA;YACEsB,SAAS,EAAC,eAAe;YACzBO,WAAW,EAAC,SAAS;YACrBC,IAAI,EAAC,IAAI;YACTC,IAAI,EAAC,IAAI;YAAA,GACLhB,QAAQ,CAAC,SAAS;UAAC;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC,eACF3B,OAAA;YAAAuB,QAAA,GAAAX,eAAA,GAAMO,MAAM,CAACd,OAAO,cAAAO,eAAA,uBAAdA,eAAA,CAAgBP;UAAO;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,eACN3B,OAAA;UAAQsB,SAAS,EAAC,gBAAgB;UAACU,IAAI,EAAC,QAAQ;UAAAT,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEP3B,OAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAAlB,EAAA,CAvDKF,OAAO;EAAA,QACmCZ,OAAO;AAAA;AAAAsC,EAAA,GADjD1B,OAAO;AAyDb,eAAeA,OAAO;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}